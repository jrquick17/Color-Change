{"version":3,"sources":["color-of-time.min.js"],"names":["angular","module","ColorOfTimeController","ColorOfTimeService","$scope","this","$watch","getColor","color","reset","init","controller","$inject","colorOfTime","DefaultService","restrict","replace","scope","skip","style","link","elem","attrs","get","styles","split","stylesCount","length","i","css","directive","service","SECONDS_PER_DAY","_to255","value","Math","floor","toString","remainingPercent","_getRemainingDayPercent","_getColorPercent","percent","red","green","blue","_toHexadecimal","date","Date","minutes","getHours","seconds","getMinutes","getSeconds","concat","toUpperCase","alpha","beta"],"mappings":"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","file":"color-of-time.min.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular.module('color-of-time', []);\n})();\n(function() {\n    'use strict';\n\n    angular.module('color-of-time').controller(\n        'ColorOfTimeController',\n        ColorOfTimeController\n    );\n\n    ColorOfTimeController.$inject = [\n        'ColorOfTimeService',\n        '$scope'\n    ];\n\n    function ColorOfTimeController(\n        ColorOfTimeService,\n        $scope\n    ) {\n        var ColorOfTimeController = this;\n\n        $scope.$watch(\n            function() {\n                return ColorOfTimeService.getColor(1);\n            },\n            function(color) {\n                ColorOfTimeController.color = color;\n            }\n        );\n\n        ColorOfTimeController.reset = reset;\n        function reset() {\n            ColorOfTimeController.color = '#FFFFFF';\n        }\n\n        ColorOfTimeController.init = init;\n        function init() {\n            ColorOfTimeController.reset();\n        }\n\n        ColorOfTimeController.init();\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('color-of-time').directive('colorOfTime', colorOfTime);\n\n    colorOfTime.$inject = [\n        'ColorOfTimeService',\n        'DefaultService'\n    ];\n\n    function colorOfTime(\n        ColorOfTimeService,\n        DefaultService\n    ) {\n        return {\n            restrict: 'AE',\n            replace:  true,\n            scope: {\n                skip: '=',\n                style:     '='\n            },\n            link: function(scope, elem, attrs) {\n                var skip = DefaultService.get(\n                    scope.skip,\n                    0\n                );\n\n                var styles = DefaultService.get(\n                    scope.style,\n                    'background-color'\n                ).split(',');\n\n                var stylesCount = styles.length;\n                for (var i = 0; i < stylesCount; i++) {\n                    var style = styles[i];\n\n                    elem.css(\n                        style,\n                        ColorOfTimeService.getColor(skip)\n                    );\n                }\n            }\n        };\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('color-of-time').service('ColorOfTimeService', ColorOfTimeService);\n\n    function ColorOfTimeService() {\n        var SECONDS_PER_DAY = 86400;\n\n        var ColorOfTimeService = this;\n\n        ColorOfTimeService.getColor = function(skip) {\n            var remainingPercent = ColorOfTimeService._getRemainingDayPercent(skip);\n\n            return ColorOfTimeService._getColorPercent(remainingPercent);\n        };\n\n        ColorOfTimeService._getColorPercent = _getColorPercent;\n        function _getColorPercent(percent) {\n            var red = 0;\n            var green = 0;\n            var blue = 0;\n\n            if (percent < 0.17) {\n                red = 1;\n                green = percent / 0.17;\n                blue = 0;\n            } else if (percent < 0.34) {\n                red = 1 - ((percent - 0.17) / 0.17);\n                green = 1;\n                blue = 0;\n            } else if (percent < 0.51) {\n                red = 0;\n                green = 1;\n                blue = (percent - 0.34) / 0.17;\n            } else if (percent < 0.68) {\n                red = 0;\n                green = 1 - ((percent - 0.51) / 0.17);\n                blue = 1;\n            } else if (percent < 0.85) {\n                red = (percent - 0.68) / 0.17;\n                green = 0;\n                blue = 1;\n            } else if (percent <= 1) {\n                red = 1;\n                green = 0;\n                blue = 1 - ((percent - 0.85) / 0.15);\n            }\n\n            return ColorOfTimeService._toHexadecimal(red, blue, green);\n        }\n\n        ColorOfTimeService._getRemainingDayPercent = _getRemainingDayPercent;\n        function _getRemainingDayPercent(skip) {\n            var date = new Date();\n\n            var minutes = date.getHours() * 60;\n            var seconds = date.getMinutes() * 60 + minutes;\n\n            seconds += date.getSeconds();\n\n            if (typeof skip === 'number') {\n                seconds += skip;\n            }\n\n            if (seconds > SECONDS_PER_DAY) {\n                seconds -= SECONDS_PER_DAY;\n            }\n\n            var percent = seconds / SECONDS_PER_DAY;\n\n            return percent % 1;\n        }\n\n        ColorOfTimeService._toHexadecimal = _toHexadecimal;\n        function _toHexadecimal(red, blue, green) {\n            red = _to255(red, blue, green);\n            green = _to255(green);\n            blue = _to255(blue);\n\n            if (red.length === 1) {\n                red = \"0\".concat(red);\n            }\n            if (green.length === 1) {\n                green = \"0\".concat(green);\n            }\n            if (blue.length === 1) {\n                blue = \"0\".concat(blue);\n            }\n\n            return \"#\" + red.concat(green).concat(blue).toUpperCase();\n        }\n\n        ColorOfTimeService._to255 = _to255;\n        function _to255(value) {\n            return Math.floor(value * 255).toString(16);\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('color-of-time').service('DefaultService', DefaultService);\n\n    function DefaultService() {\n        var DefaultService = this;\n\n        DefaultService.get = get;\n        function get(alpha, beta) {\n            if (typeof alpha !== 'undefined') {\n                return alpha;\n            } else if (typeof beta !== 'undefined') {\n                return beta;\n            } else {\n                return false;\n            }\n        }\n    }\n})();"]}