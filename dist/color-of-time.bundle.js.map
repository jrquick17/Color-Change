{"version":3,"names":[],"mappings":"","sources":["color-of-time.bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function () {\n    'use strict';\n})();\n(function () {\n    'use strict';\n\n    angular.module('ColorOfTimeApp', []);\n})();\n(function () {\n    'use strict';\n\n    angular.module('ColorOfTimeApp').controller('ColorOfTimeController', ColorOfTimeController);\n\n    ColorOfTimeController.$inject = ['ColorOfTimeService', '$scope'];\n\n    function ColorOfTimeController(ColorOfTimeService, $scope) {\n\n        $scope.color = '#FFFFFF';\n\n        $scope.$watch(function () {\n            return ColorOfTimeService.getColor(1);\n        }, function (color) {\n            $scope.color = color;\n        });\n\n        /**\n         * Get the current time's color\n         *\n         * @returns {string|*}\n         */\n        this.getColor = function () {\n            return $scope.color;\n        };\n    }\n})();\n(function () {\n    'use strict';\n\n    angular.module('ColorOfTimeApp').directive('colorOfTime', colorOfTime);\n\n    colorOfTime.$inject = ['ColorOfTimeService'];\n\n    function colorOfTime(ColorOfTimeService) {\n        return {\n            restrict: 'AE',\n            replace: true,\n            link: function (scope, elem, attrs) {\n                elem.css(\"background-color\", ColorOfTimeService.getColor());\n            }\n        };\n    }\n})();\n(function () {\n    'use strict';\n\n    angular.module('ColorOfTimeApp').service('ColorOfTimeService', ColorOfTimeService);\n\n    function ColorOfTimeService() {\n        var ColorOfTimeService = this;\n\n        ColorOfTimeService.getColor = function (speed) {\n            if (typeof speed === 'undefined') {\n                speed = 1;\n            }\n\n            //Calculate % of day already passed\n            var date = new Date();\n            var hour = (date.getHours() * 60 * 60 + date.getMinutes() * 60 + date.getSeconds()) / 86400;\n            hour = hour * speed % 1;\n\n            //Calculate color value [0-255] based on the time\n            var red = 0;\n            var green = 0;\n            var blue = 0;\n\n            if (hour < 0.17) {\n                red = 1;\n                green = hour / 0.17;\n                blue = 0;\n            } else if (hour < 0.34) {\n                red = 1 - (hour - 0.17) / 0.17;\n                green = 1;\n                blue = 0;\n            } else if (hour < 0.51) {\n                red = 0;\n                green = 1;\n                blue = (hour - 0.34) / 0.17;\n            } else if (hour < 0.68) {\n                red = 0;\n                green = 1 - (hour - 0.51) / 0.17;\n                blue = 1;\n            } else if (hour < 0.85) {\n                red = (hour - 0.68) / 0.17;\n                green = 0;\n                blue = 1;\n            } else if (hour <= 1) {\n                red = 1;\n                green = 0;\n                blue = 1 - (hour - 0.85) / 0.15;\n            }\n\n            //Convert color value [0-255] to hexadecimal\n            red = Math.floor(red * 255).toString(16);\n            green = Math.floor(green * 255).toString(16);\n            blue = Math.floor(blue * 255).toString(16);\n            if (red.length === 1) {\n                red = \"0\".concat(red);\n            }\n            if (green.length === 1) {\n                green = \"0\".concat(green);\n            }\n            if (blue.length === 1) {\n                blue = \"0\".concat(blue);\n            }\n\n            return \"#\" + red.concat(green).concat(blue).toUpperCase();\n        };\n    }\n})();\n\n},{}]},{},[1]);\n"],"file":"color-of-time.bundle.js"}